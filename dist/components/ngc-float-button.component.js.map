{"version":3,"sources":["../../components/ngc-float-button.component.ts"],"names":[],"mappings":"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","file":"ngc-float-button.component.js","sourceRoot":"","sourcesContent":["/* created by @GustavoCostaW https://github.com/gustavocostaw/ngc-float-button  */\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { NgcFloatItemButtonComponent } from './ngc-float-item-button.component';\nimport {\n  Component,\n  Input,\n  ContentChildren,\n  ElementRef,\n  HostListener,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  AfterContentInit,\n  OnDestroy,\n  Output,\n  OnChanges\n} from '@angular/core';\n\n\n\nexport class NgcFloatButtonComponent implements AfterContentInit, OnDestroy, OnChanges {\n  private elementref: HTMLElement;\n  private subs: Subscription[] = [];\n  public state: BehaviorSubject<any>;\n\n   icon: string;\n   direction: string;\n   spaceBetweenButtons: number = 55;\n   open: Subject<boolean>;\n   color: string = '#dd0031';\n   disabled: boolean = false;\n   events: Subject<any> = new Subject();\n   buttons;\n\n  constructor(private element: ElementRef, private cd: ChangeDetectorRef) {\n    this.elementref = element.nativeElement;\n\n    this.state = new BehaviorSubject({\n      display: false,\n      direction: 'top',\n      event: 'start',\n      spaceBetweenButtons: this.spaceBetweenButtons\n    });\n  }\n\n  public toggle() {\n    if (this.disabled) {\n      return this.disabled;\n    }\n    this.state.next({\n      ...this.state.getValue(),\n      display: !this.state.getValue().display,\n      event: !this.state.getValue().display ? 'open' : 'close'\n    });\n  }\n\n  // only top and bottom support content element\n  private checkDirectionType() {\n    if (this.buttons.toArray()) {\n      let display = 'block';\n\n      if (this.direction === 'right' || this.direction === 'left') {\n        display = 'none';\n      }\n\n      this.buttons.toArray().forEach(element => {\n        element.contentref.nativeElement.style.display = display;\n      });\n    }\n  }\n\n  // transition\n  private animateButtons(eventType) {\n    this.buttons.toArray().forEach( (btn, i) => {\n      i+=1;\n      let style = btn.elementref.nativeElement.style;\n\n      if (eventType !== 'directionChanged' && this.state.getValue().display) {\n        style['transform'] = 'scale(1)';\n        style['transition-duration'] = '0s';\n\n        if (btn.timeout) {\n          clearTimeout(btn.timeout);\n        }\n      }\n\n      setTimeout( () => {\n        style['transition-duration'] = this.state.getValue().display ? `${ 90 + (100 * i) }ms` : '';\n        style['transform'] = this.state.getValue().display ? this.getTranslate(i) : '';\n      }, 50);\n\n      if (eventType !== 'directionChanged' && !this.state.getValue().display) {\n        btn.timeout = setTimeout( () => {\n          style['transform'] = 'scale(0)';\n        }, 90 + (100 * i) );\n      }\n    });\n  }\n\n  // get transition direction\n  private getTranslate(i) {\n\n      let animation;\n\n      switch (this.direction) {\n        case 'right' :\n           animation = `translate3d(${ this.state.getValue().spaceBetweenButtons * i }px,0,0)`;\n           break;\n        case  'bottom' :\n          animation = `translate3d(0,${ this.state.getValue().spaceBetweenButtons * i }px,0)`;\n          break;\n        case 'left' :\n          animation = `translate3d(-${ this.state.getValue().spaceBetweenButtons * i }px,0,0)`;\n          break;\n        default :\n          animation = `translate3d(0,-${ this.state.getValue().spaceBetweenButtons * i }px,0)`;\n          break;\n      }\n\n      return animation;\n  }\n\n  /* some problems here */\n  // @HostListener('document:click', ['$event.target']) private clickOutside(target) {\n  //   if (this.state.getValue().display && !this.elementref.contains(target)) {\n  //     this.state.next({\n  //       ...this.state.getValue(),\n  //       display: false,\n  //       event: 'close'\n  //     });\n  //   }\n  // }\n\n  ngAfterContentInit() {\n    if (this.direction) {\n      // first time to check\n      this.checkDirectionType();\n    }\n\n    this.buttons.toArray().map(v => {\n      const sub = v.clicked.subscribe(() => {\n        this.state.next({\n          ...this.state.getValue(),\n          display: false,\n          event: 'close'\n        });\n      });\n\n      this.subs.push(sub);\n    });\n\n    const sub = this.state.subscribe( v => {\n      this.animateButtons(v.event);\n\n      this.events.next({\n        display: v.display,\n        event: v.event,\n        direction: v.direction\n      });\n    });\n    this.subs.push(sub);\n  }\n\n  // if @Input values changes, we need check the direction type\n  ngOnChanges(changes) {\n    if (changes.direction && !changes.direction.firstChange) {\n      this.state.next({\n        ...this.state.getValue(),\n        event: 'directionChanged',\n        direction: changes.direction.currentValue\n      });\n      // if changes happens\n      this.checkDirectionType();\n    }\n\n    if (changes.open && changes.open.currentValue) {\n      const sub = this.open.subscribe(v => {\n        if (v !== this.state.getValue().display) {\n          this.state.next({\n            ...this.state.getValue(),\n            event: v ? 'open' : 'close',\n            display: v\n          });\n\n          // make angular happy\n          this.cd.markForCheck();\n        }\n      });\n\n      this.subs.push(sub);\n    }\n\n    if (changes.spaceBetweenButtons && changes.spaceBetweenButtons.currentValue) {\n      this.state.next({\n        ...this.state.getValue(),\n        event: 'spaceBetweenButtonsChanged',\n        spaceBetweenButtons: changes.spaceBetweenButtons.currentValue\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.subs.forEach(v => {\n      v.unsubscribe();\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'ngc-float-button',\n  styles: [`\n\n  :host {\n    position: absolute;\n  }\n\n  .fab-menu {\n      box-sizing: border-box;\n      font-size: 20px;\n      width:55px;\n      height: 55px;\n      text-align: left;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      cursor: pointer;\n      z-index: 9;\n  }\n\n  .fab-toggle {\n    border-radius: 100%;\n    width: 40px;\n    height: 40px;\n    color: white;\n    text-align: center;\n    line-height: 50px;\n    transform: translate3d(0, 0, 0);\n    transition: all ease-out 200ms;\n    z-index: 2;\n    transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);\n    transition-duration: 400ms;\n    transform: scale(1.1, 1.1) translate3d(0, 0, 0);\n    cursor: pointer;\n    box-shadow: 0 2px 5px 0 rgba(0,0,0,.26);\n  }\n\n  .fab-menu .fab-toggle:hover {\n    transform: scale(1.2, 1.2) translate3d(0, 0, 0);\n  }\n\n  .fab-menu /deep/ .item {\n     opacity: 0;\n  }\n\n  .fab-menu.active /deep/ .item {\n     opacity: 1;\n  }\n\n  .fab-menu.active /deep/ .content-wrapper {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .fab-menu.active /deep/ .content {\n    display: block;\n  }\n\n  .fab-menu.active .fab-toggle {\n    transition-timing-function: linear;\n    transition-duration: 200ms;\n    transform: scale(0.8, 0.8) translate3d(0, 0, 0);\n  }\n\n  `],\n  template: `\n    <nav class=\"fab-menu\" [class.active]=\"(state | async).display\">\n        <a class=\"fab-toggle\" (click)=\"toggle()\" [style.backgroundColor]=\"color\">\n          <mat-icon> {{icon}} </mat-icon>\n        </a>\n        <ng-content></ng-content>\n    </nav>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'icon': [{ type: Input },],\n'direction': [{ type: Input },],\n'spaceBetweenButtons': [{ type: Input },],\n'open': [{ type: Input },],\n'color': [{ type: Input },],\n'disabled': [{ type: Input },],\n'events': [{ type: Output },],\n'buttons': [{ type: ContentChildren, args: [NgcFloatItemButtonComponent, ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}